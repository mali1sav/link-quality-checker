Backlink Quality and Relevancy Analyser - Detailed Execution Flow

This application analyzes the quality and relevancy of backlinks for RS Online (RS Components) by comparing the industry and purpose of source domains with RS Online's business, and by evaluating backlink metrics.

Detailed Step-by-Step Execution Flow:

1. Environment Setup and Initialization:
   - The script starts by importing necessary libraries (streamlit, pandas, openai, etc.).
   - It loads environment variables from a .env file using load_dotenv().
   - API keys for OpenAI and DataForSEO are retrieved from environment variables.
   - Streamlit page configuration is set with a wide layout and custom title.
   - Constants are defined:
     - QUALITY_THRESHOLD = 60 (for determining Good Quality verdict)
     - RS_ONLINE_DESCRIPTION (detailed description of RS Online's business)
   - Keywords are extracted from RS_ONLINE_DESCRIPTION using regex.

2. Asynchronous Functions Definition:
   - fetch_backlink_data(domain): Asynchronously fetches backlink data from DataForSEO API.
   - fetch_serp_data(domain): Asynchronously fetches SERP data from DataForSEO API.

3. Utility Functions Definition:
   - calculate_content_similarity(serp_data): Calculates content similarity between a domain and RS Online.
   - generate_domain_explanation(domain, backlink_data, content_similarity): Generates an explanation using OpenAI's GPT-4 model.
   - calculate_overall_score(backlink_data, content_similarity): Calculates an overall quality score.
   - analyse_relevancy_batch(df, progress_bar): Processes a batch of domains for analysis.
   - generate_excel(results_df): Creates an Excel file with color-coded results.

4. Streamlit UI Setup:
   - The main title is displayed.
   - A file uploader is created for CSV or Excel files.

5. File Processing:
   - When a file is uploaded, it's read into a pandas DataFrame.
   - The DataFrame is displayed to the user.

6. Analysis Initiation:
   - An "Analyse Backlinks" button is created.
   - When clicked, it triggers the analyse_relevancy_batch function.

7. Batch Analysis Process:
   - For each row in the DataFrame:
     a. Backlink data is fetched using fetch_backlink_data.
     b. SERP data is fetched using fetch_serp_data.
     c. Content similarity is calculated using calculate_content_similarity.
     d. An overall score is computed using calculate_overall_score.
     e. An explanation is generated using generate_domain_explanation.
   - Results are collected in a new DataFrame.

8. Results Display:
   - Analysis results are shown in expandable sections for each backlink.
   - Each section displays:
     - Metrics: Spam Score, Referring Domains, Total Backlinks, Content Similarity, Overall Score
     - A radio button for manual verdict selection (Good Quality or Low Quality)
     - An explanation of the backlink quality and relevance

9. Interactive Verdict Adjustment:
   - Users can change the verdict using radio buttons.
   - Changes are stored in the Streamlit session state and updated in the results DataFrame.

10. Results Update:
    - An "Update Results" button allows users to confirm any manual changes.

11. Excel Report Generation:
    - The generate_excel function creates an Excel file with the analysis results.
    - A download button is provided for users to get the Excel file.

Key Components:
- Asynchronous API calls: Improves performance when fetching data for multiple domains.
- OpenAI Integration: Uses GPT-4 to generate human-like explanations of backlink profiles.
- Interactive UI: Allows users to upload files, view results, and manually adjust verdicts.
- Data Visualization: Presents results in an easy-to-understand format with expandable sections.
- Error Handling: Includes try-except blocks to handle potential errors during the analysis process.

Note: Ensure that the OPENAI_API_KEY, DATAFORSEO_API_USERNAME, and DATAFORSEO_API_PASSWORD environment variables are set with your API credentials before running the app.
